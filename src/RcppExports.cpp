// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// noe_faithful
Rcpp::NumericMatrix noe_faithful(Rcpp::NumericVector v1, Rcpp::NumericVector v2, int n1, int n2, bool parallel, bool progress);
RcppExport SEXP _OrdStat_noe_faithful(SEXP v1SEXP, SEXP v2SEXP, SEXP n1SEXP, SEXP n2SEXP, SEXP parallelSEXP, SEXP progressSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type v1(v1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type v2(v2SEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type n2(n2SEXP);
    Rcpp::traits::input_parameter< bool >::type parallel(parallelSEXP);
    Rcpp::traits::input_parameter< bool >::type progress(progressSEXP);
    rcpp_result_gen = Rcpp::wrap(noe_faithful(v1, v2, n1, n2, parallel, progress));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_OrdStat_noe_faithful", (DL_FUNC) &_OrdStat_noe_faithful, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_OrdStat(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
