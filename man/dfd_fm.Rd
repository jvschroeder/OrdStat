% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{dfd_fm}
\alias{dfd_fm}
\title{Calculates the joint density of the number discoveries R and the number of false discoveries V}
\usage{
dfd_fm(b, Fn_alt, m0, m, parallel = TRUE, progress = TRUE,
  quick = FALSE)
}
\arguments{
\item{b}{Vector of upper bounds b}

\item{Fn_alt}{Distribution (cdf) under the alternative}

\item{m0}{The number of true hypotheses - Can be at most m}

\item{m}{The number of hypotheses - Can be at most length(b)}

\item{parallel}{Use parallelization to speed up the calculation?}

\item{progress}{Show a progress bar?}

\item{quick}{Use lower precision to speed up calculation?}
}
\value{
Returns a data.frame with three columns. The first column 'R' is the number of discoveries, the second column 'V' is the number
of false discoveries and the third column gives the joint probability of making exactly this number of discoveries and false discoveries.
}
\description{
Calculates, under the assumption of joint stochastic independence, the joint density of the number discoveries R and the number of false discoveries V of
an FDR controlling step-up test given by the vector of thresholds b.
}
\details{
Calculates, under the assumption
* of joint stochastic independence and
* that the p-values are Uni[0,1] under H_0 and distributed according to Fn_alt under H_1 and
* that exactly m0 of the m hypotheses are true
the joint density of the number discoveries R and the number of false discoveries V of
an FDR controlling step-up test given by the vector of thresholds b. This corresponds to
the model FM(m,m0,Fn_alt) in https://arxiv.org/abs/1812.09063.

The implementation is based on a generalization of Noe's recursion. For the details see https://arxiv.org/abs/1812.09063.
}
\examples{
#Equation (24) in Glueck, D., Mandel, J., Karimpour-Fard, A., et al. (2008). Exact Calculations of Average Power for the Benjamini-Hochberg Procedure. The International Journal of Biostatistics, 4(1), doi:10.2202/1557-4679.1103
Fn <- function(t) 1 + pnorm(qnorm(t/2)-sqrt(N)) - pnorm(qnorm(1-t/2)-sqrt(N))
#Setting of Table 2 of Glueck (2008)
N <- 5
m <- 5
m0 <- 4
t <- 0.05 * (1:m)/m
density <- OrdStat::dfd_fm(t,Fn,m0,m,progress=F)
#Calculate the last power value in Table 2 of Glueck (2008)
print(with(density,sum(p*(R-V)/(m-m0))))

}
